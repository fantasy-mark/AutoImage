name: Docker Image CI

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v2
    - name: Auto Build Docker Image
      run: |
        # 定义一个函数来解析Dockerfile的第一行注释
        parse_dockerfile() {
          local line=$(sed -n '1p' Dockerfile)
          echo $line | awk '{print $2 $3 $4 $5}'
        }
        
        # 从Dockerfile的第一行注释中提取信息
        repo_namespace_image_version=$(parse_dockerfile)
        echo "repo_namespace_image_version: $repo_namespace_image_version"
        
        # 使用awk分割字符串并赋值给变量
        repo=$(echo $repo_namespace_image_version | awk -F'/' '{print $1}')
        namespace=$(echo $repo_namespace_image_version | awk -F'/' '{print $2}')
        image=$(echo $repo_namespace_image_version | awk -F'/' '{print $3}')
        version=$(echo $repo_namespace_image_version | awk -F'/' '{print $4}')
        
        # 打印变量
        echo "Repo: $repo"
        echo "Namespace: $namespace"
        echo "Image: $image"
        echo "Version: $version"
        
        # 使用Dockerfile构建镜像,推送镜像到镜像仓库 - 对应 https://cr.console.aliyun.com/cn-shenzhen/instance/repositories  
        docker build -f Dockerfile -t $image:${version} .
        docker tag $image:${version} $repo/$namespace/$image:${version} 
        docker login --username=${{ secrets.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }} $repo
        docker push $repo/$namespace/$image:${version}
        if [ $? -eq 0 ]; then
            echo "docker push Success"
        else 
            echo "docker push Failed"
        fi
